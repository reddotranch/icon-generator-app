import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import Image from "next/image";
import { Button } from "~/component/Button";
import { FormGroup } from "~/component/FormGroup";
import { Input } from "~/component/Input";
import { api } from "~/utils/api";

const GeneratePage: NextPage = () => {

    const [form, setForm] = useState({
        prompt: "",
    });
    const [imageUrl, setImageUrl] = useState('')

    const generateIcon = api.generate.generateIcon.useMutation({
      onSuccess(data) {
        // console.log('mutation finished', data.imageUrl);
        if (!data.imageUrl) return;
        setImageUrl(data.imageUrl);
      }
    });


    function updateForm(key:string) {
        return function (e: React.ChangeEvent<HTMLInputElement>) {
            setForm((prev) => ({
                ...prev,
                [key]: e.target.value,
            }));
        };
    }

    function handleFormSubmit(e: React.FormEvent) {
        e.preventDefault();
        console.log(form);
        generateIcon.mutate({
            prompt: form.prompt,
        //We can now submit data to the backend
        });
        setForm({ prompt: "" });

    }

return (
    <>
      <Head>
        <title>Generate Icons</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-24 flex min-h-screen flex-col gap-4">
        <h1 className="text-6xl">Generate icons here</h1>
        <p className="text-2xl mb-12">Fill in the form below to generate your icons.</p>
        <form className="flef flex-col gap-4" onSubmit={handleFormSubmit}>
          <h2 className="text-xl">
            1. Describe the icon you want to generate
          </h2>
          <FormGroup>
              <label>Prompt</label>
              <Input value={form.prompt} onChange={updateForm('prompt')}></Input>
          </FormGroup>
          <Button 
          isLoading={generateIcon.isLoading}
          disabled={generateIcon.isLoading}>Submit</Button>
        </form>

        {imageUrl && (
        <Image
          src={imageUrl}
          alt="an image of your generate prompt"
          width={100}
          height={100}
        />
        )}
      </main>
    </>
  );
};

export default GeneratePage;