import { type NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import Image from "next/image";
import { Button } from "~/component/Button";
import { FormGroup } from "~/component/FormGroup";
import { Input } from "~/component/Input";
import { api } from "~/utils/api";

const GeneratePage: NextPage = () => {

    const [form, setForm] = useState({
        prompt: "",
    });
    const [imageUrl, setImageUrl] = useState('')

    const generateIcon = api.generate.generateIcon.useMutation({
      onSuccess(data) {
        // console.log('mutation finished', data.imageUrl);
        if (!data.imageUrl) return;
        setImageUrl(data.imageUrl);
      }
    });


    function updateForm(key:string) {
        return function (e: React.ChangeEvent<HTMLInputElement>) {
            setForm((prev) => ({
                ...prev,
                [key]: e.target.value,
            }));
        };
    }

    function handleFormSubmit(e: React.FormEvent) {
        e.preventDefault();
        console.log(form);
        generateIcon.mutate({
            prompt: form.prompt,
        //We can now submit data to the backend
        });
        setForm({ prompt: "" });

    }

    const session = useSession();

// const buyCredits = () => {
//   throw new Error("Function not implemented.");
// };

return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">

        {session.data?.user?.name}
        <form className="flex flex-col gap-4" onSubmit={handleFormSubmit}>
          <FormGroup>
              <label>Prompt</label>
              <Input value={form.prompt} onChange={updateForm('prompt')}></Input>
          </FormGroup>
          <Button className="rounded bg-blue-400 px-4 py-2 hover:bg-blue-500">
              Submit
          </Button>
        </form>

        {imageUrl && (
        <Image
          src={`data:image/jpeg;base64,${imageUrl}`}
          alt="an image of your generate prompt"
          width={100}
          height={100}
        />
        )}
      </main>
    </>
  );
};

export default GeneratePage;